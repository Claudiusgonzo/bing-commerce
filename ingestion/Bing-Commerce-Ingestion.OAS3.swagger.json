{
  "openapi": "3.0.1",
  "info": {
    "title": "Bing Commerce Ingestion",
    "version": "1"
  },
  "servers": [
    {
      "url": "https://commerce.bing.com/api/ingestion/v1"
    }
  ],
  "paths": {
    "/{tenantid}/indexes": {
      "post": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "Create an index.",
        "description": "Creates a definition of the tenant's index.",
        "operationId": "CreateIndex",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An Index object that describes the index definition to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Index"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "Get list of index definitions.",
        "description": "Get list of index definitions that you defined for a tenant.",
        "operationId": "GetAllIndexes",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "tenantid",
          "in": "path",
          "description": "The ID that uniquely identifies the tenant that the index belongs to.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/{tenantid}/indexes/{indexid}": {
      "delete": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "Delete an index.",
        "description": "Delete an index definition along with all the catalog.",
        "operationId": "DeleteIndex",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "Updates an index with id.",
        "description": "Update the definition for your index.",
        "operationId": "UpdateIndex",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The ID that uniquely identifies the index definition to manage.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Index"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "Get index definition by id.",
        "description": "Get a specific index definition for a tenant.",
        "operationId": "GetIndex",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "tenantid",
          "in": "path",
          "description": "The ID that uniquely identifies the tenant that the index belongs to.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "indexid",
          "in": "path",
          "description": "The ID that uniquely identifies the index definition to manage.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/{tenantid}/indexes/{indexid}/deletedata": {
      "post": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "Delete documents from your catalog.",
        "description": "Delete documents from your index's catalog.",
        "operationId": "DeleteDocuments",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The set of document ids to delete.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Requests.StringSet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Succeeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDocumentsResponse"
                }
              }
            }
          },
          "206": {
            "description": "PartiallySucceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDocumentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDocumentsResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "tenantid",
          "in": "path",
          "description": "The ID that uniquely identifies the tenant that the index belongs to.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "indexid",
          "in": "path",
          "description": "The ID that uniquely identifies the index definition to manage.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/{tenantid}/indexes/{indexid}/status": {
      "get": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "Get index status by id.",
        "description": "Get the detailed status of your index in each supported region.",
        "operationId": "GetIndexStatus",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexStatusResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "tenantid",
          "in": "path",
          "description": "The ID that uniquely identifies the tenant that the index belongs to.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "indexid",
          "in": "path",
          "description": "The ID that uniquely identifies the index definition to manage.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/{tenantid}/indexes/{indexid}/pushdata": {
      "post": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "Push catalog data.",
        "description": "This method pushes updates to your your index data to Bing. This is an asynchronous process. To upload your index data to Bing, you'll send a push request that contains your index data.",
        "operationId": "PushDataUpdate",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notransform",
            "in": "query",
            "description": "This disables transformation config processing if the config was uploaded for some index. It's useful when the data is already transformed and is matching the index definition. Default is `false`",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "updateid",
            "in": "query",
            "description": "An id to uniquely identify the push update request in order to be able to track it down later.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushDataUpdateResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "tenantid",
          "in": "path",
          "description": "The ID that uniquely identifies the tenant that the index belongs to.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "indexid",
          "in": "path",
          "description": "The ID that uniquely identifies the index definition to manage.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/{tenantid}/indexes/{indexid}/status/{updateid}": {
      "get": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": ".",
        "description": ".",
        "operationId": "PushDataStatus",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushUpdateStatusResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "tenantid",
          "in": "path",
          "description": "The ID that uniquely identifies the tenant that the index belongs to.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "indexid",
          "in": "path",
          "description": "The ID that uniquely identifies the index definition to manage.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "updateid",
          "in": "path",
          "description": "An id to uniquely identify the push update request in order to be able to track it down later.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/{tenantid}/indexes/{indexid}/transformation": {
      "delete": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "Delete your index's transformation config.",
        "description": "Delete the transformation config that currently aplies to data you push to your index.",
        "operationId": "DeleteTransformationConfig",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationConfigResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "Retrieve your current index's transformation config.",
        "description": "Retrieve the transformation config that currently applies to data you push to your index.",
        "operationId": "CreateOrUpdateTransformationConfig",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationConfigResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "Get ingestion status.",
        "description": "Track your ingestion by querying the status.",
        "operationId": "GetTransformationConfig",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationConfigResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "tenantid",
          "in": "path",
          "description": "The ID that uniquely identifies the tenant that the index belongs to.",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "indexid",
          "in": "path",
          "description": "The ID that uniquely identifies the index definition to manage.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/transformation/tryout": {
      "post": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "Create a transformation config.",
        "description": "Upload a new transformation config and set it as the transformation config that applies to data you push to your index.",
        "operationId": "UploadTryOutConfig",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/transformation/tryout/{tryoutid}": {
      "post": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "Upload a trytout config.",
        "description": "Upload a transformation config that you can use to test data transformation on the cloud.",
        "operationId": "ExecuteTryOutConfig",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationTryoutResponse"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "tryoutid",
          "in": "path",
          "description": "The transformation tryout config id.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/schemadetection": {
      "post": {
        "tags": [
          "CommerceSearchIngestionService"
        ],
        "summary": "",
        "description": "",
        "operationId": "DetectSchema",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "header",
            "description": "Bing developer subcription id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "The push data update document format.",
            "schema": {
              "enum": [
                "Unknown",
                "LDJson",
                "CSV",
                "TSV",
                "JsonArray"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaDetectionResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Response.PushStatus": {
        "enum": [
          "Queued",
          "Error"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "Response.PushStatus",
          "values": [
            {
              "value": "Queued"
            },
            {
              "value": "Error"
            }
          ]
        }
      },
      "Requests.StringSet": {
        "type": "object",
        "properties": {
          "values": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of strings"
          }
        },
        "description": "Defines a set of strings"
      },
      "Index": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The index's name. The name must be unique per tenant, contain only ASCII characters, and have a maximum length of 64 characters."
          },
          "description": {
            "type": "string",
            "description": "A description of the index. The description is for the tenant's use. The description must contain only ASCII characters and have a maximum length of 64 characters."
          },
          "regions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Region"
            },
            "description": "The array of regions where the customer data will be processed and served."
          },
          "searchScenario": {
            "enum": [
              "Unknown",
              "Retail",
              "Document",
              "Hotel"
            ],
            "type": "string",
            "description": "The type of search scenario that the user is using the index for, which includes Retail, Hotel, and Document.",
            "default": "Retail"
          },
          "searchServices": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "VisualSearch",
                "Autosuggest",
                "TextSearch"
              ],
              "type": "string"
            },
            "description": "The array of additional search services that the user wants to include for the index, which includes Autosuggest and VisualSearch."
          },
          "schemaVersion": {
            "type": "string",
            "description": "The version for the schema of the index."
          },
          "fields": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexField"
            },
            "description": "The fields that are associated with the index."
          }
        },
        "description": "Contains the definition for the index. An index consists of a set of documents that search operations can be performed upon."
      },
      "IndexField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Index field name."
          },
          "type": {
            "$ref": "#/components/schemas/IndexFieldType"
          },
          "facetable": {
            "type": "boolean",
            "description": "Enables using the field for facets and other field-based aggregations."
          },
          "filterable": {
            "type": "boolean",
            "description": "Enables using the field in filter and boost conditions."
          },
          "retrievable": {
            "type": "boolean",
            "description": "Enables using the field values in search response."
          },
          "searchable": {
            "type": "boolean",
            "description": "Enables text matching on the field."
          },
          "sortable": {
            "type": "boolean",
            "description": "Enables sorting results by the field."
          },
          "fieldLabel": {
            "type": "string",
            "description": "A label to use with the field."
          },
          "fields": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexField"
            },
            "description": "A child list of fields."
          }
        },
        "description": "Contains the definition for the index field. A field represents a single unit of data."
      },
      "Response.Index": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Index"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID that uniquely identifies the index definition that had the CRUD operation applied."
              },
              "provisioningState": {
                "enum": [
                  "Unknown",
                  "NotStarted",
                  "Provisioning",
                  "Deprovisioning",
                  "Succeeded",
                  "Failed"
                ],
                "type": "string",
                "description": "The current state of provisioning for the index definition."
              },
              "createdDateTime": {
                "type": "string",
                "description": "The date and time when the index was created."
              }
            }
          }
        ]
      },
      "IndexFieldType": {
        "enum": [
          "Unknown",
          "String",
          "Boolean",
          "Number",
          "ProductId",
          "DupId",
          "StaticRank",
          "Url",
          "ImageUrl",
          "Title",
          "Description",
          "Category",
          "Price",
          "Rating",
          "Brand",
          "Model",
          "Color",
          "Size",
          "Material",
          "Gender",
          "AgeGroup",
          "Array",
          "Dictionary",
          "ExcludeFlag",
          "Identifier",
          "Object",
          "DocumentId",
          "Author",
          "CreatedAt",
          "ModifiedAt",
          "Paragraph",
          "SubHeading",
          "SectionHeader",
          "Address",
          "RatingCount",
          "ReviewCount",
          "RatingScale",
          "Amenities",
          "StreetAddress",
          "Locality",
          "SubRegion",
          "AddressRegion",
          "PostalCode",
          "PostOfficeBoxNumber",
          "Country",
          "CountryIso",
          "Neighborhood",
          "OtherAreas",
          "PhoneNumber",
          "Barcode",
          "SecondaryImageUrls"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "IndexFieldType",
          "values": [
            {
              "value": "Unknown"
            },
            {
              "value": "String"
            },
            {
              "value": "Boolean"
            },
            {
              "value": "Number"
            },
            {
              "value": "ProductId"
            },
            {
              "value": "DupId"
            },
            {
              "value": "StaticRank"
            },
            {
              "value": "Url"
            },
            {
              "value": "ImageUrl"
            },
            {
              "value": "Title"
            },
            {
              "value": "Description"
            },
            {
              "value": "Category"
            },
            {
              "value": "Price"
            },
            {
              "value": "Rating"
            },
            {
              "value": "Brand"
            },
            {
              "value": "Model"
            },
            {
              "value": "Color"
            },
            {
              "value": "Size"
            },
            {
              "value": "Material"
            },
            {
              "value": "Gender"
            },
            {
              "value": "AgeGroup"
            },
            {
              "value": "Array"
            },
            {
              "value": "Dictionary"
            },
            {
              "value": "ExcludeFlag"
            },
            {
              "value": "Identifier"
            },
            {
              "value": "Object"
            },
            {
              "value": "DocumentId"
            },
            {
              "value": "Author"
            },
            {
              "value": "CreatedAt"
            },
            {
              "value": "ModifiedAt"
            },
            {
              "value": "Paragraph"
            },
            {
              "value": "SubHeading"
            },
            {
              "value": "SectionHeader"
            },
            {
              "value": "Address"
            },
            {
              "value": "RatingCount"
            },
            {
              "value": "ReviewCount"
            },
            {
              "value": "RatingScale"
            },
            {
              "value": "Amenities"
            },
            {
              "value": "StreetAddress"
            },
            {
              "value": "Locality"
            },
            {
              "value": "SubRegion"
            },
            {
              "value": "AddressRegion"
            },
            {
              "value": "PostalCode"
            },
            {
              "value": "PostOfficeBoxNumber"
            },
            {
              "value": "Country"
            },
            {
              "value": "CountryIso"
            },
            {
              "value": "Neighborhood"
            },
            {
              "value": "OtherAreas"
            },
            {
              "value": "PhoneNumber"
            },
            {
              "value": "Barcode"
            },
            {
              "value": "SecondaryImageUrls"
            }
          ]
        }
      },
      "Region": {
        "enum": [
          "Unknown",
          "EastAsia",
          "EastUS2",
          "NorthCentralUS",
          "NorthEurope",
          "WestUS2",
          "SoutheastAsia",
          "AustraliaEast",
          "AustraliaSoutheast",
          "AustraliaCentral",
          "AustraliaCentral2",
          "BrazilSouth",
          "CanadaCentral",
          "CanadaEast",
          "ChinaNorth",
          "ChinaEast",
          "ChinaNorth2",
          "ChinaEast2",
          "WestEurope",
          "FranceCentral",
          "FranceSouth",
          "GermanyCentral",
          "GermanyNortheast",
          "CentralIndia",
          "WestIndia",
          "SouthIndia",
          "JapanEast",
          "JapanWest",
          "KoreaCentral",
          "KoreaSouth",
          "EastUS",
          "WestUS",
          "CentralUS",
          "SouthCentralUS",
          "WestCentralUS",
          "SouthAfricaNorth",
          "SouthAfricaWest",
          "UKWest",
          "UKSouth",
          "UAENorth",
          "UAECentral"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "Region",
          "values": [
            {
              "value": "Unknown"
            },
            {
              "value": "EastAsia"
            },
            {
              "value": "EastUS2"
            },
            {
              "value": "NorthCentralUS"
            },
            {
              "value": "NorthEurope"
            },
            {
              "value": "WestUS2"
            },
            {
              "value": "SoutheastAsia"
            },
            {
              "value": "AustraliaEast"
            },
            {
              "value": "AustraliaSoutheast"
            },
            {
              "value": "AustraliaCentral"
            },
            {
              "value": "AustraliaCentral2"
            },
            {
              "value": "BrazilSouth"
            },
            {
              "value": "CanadaCentral"
            },
            {
              "value": "CanadaEast"
            },
            {
              "value": "ChinaNorth"
            },
            {
              "value": "ChinaEast"
            },
            {
              "value": "ChinaNorth2"
            },
            {
              "value": "ChinaEast2"
            },
            {
              "value": "WestEurope"
            },
            {
              "value": "FranceCentral"
            },
            {
              "value": "FranceSouth"
            },
            {
              "value": "GermanyCentral"
            },
            {
              "value": "GermanyNortheast"
            },
            {
              "value": "CentralIndia"
            },
            {
              "value": "WestIndia"
            },
            {
              "value": "SouthIndia"
            },
            {
              "value": "JapanEast"
            },
            {
              "value": "JapanWest"
            },
            {
              "value": "KoreaCentral"
            },
            {
              "value": "KoreaSouth"
            },
            {
              "value": "EastUS"
            },
            {
              "value": "WestUS"
            },
            {
              "value": "CentralUS"
            },
            {
              "value": "SouthCentralUS"
            },
            {
              "value": "WestCentralUS"
            },
            {
              "value": "SouthAfricaNorth"
            },
            {
              "value": "SouthAfricaWest"
            },
            {
              "value": "UKWest"
            },
            {
              "value": "UKSouth"
            },
            {
              "value": "UAENorth"
            },
            {
              "value": "UAECentral"
            }
          ]
        }
      },
      "IndexResponse": {
        "type": "object",
        "properties": {
          "indexes": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Response.Index"
            },
            "description": "A list of indexes"
          }
        },
        "description": "A response containing a list of indexes."
      },
      "DeleteDocumentsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "enum": [
              "Succeeded",
              "PartiallySucceeded",
              "Failed"
            ],
            "type": "string",
            "description": "The status for the document deletion request."
          },
          "errorMessage": {
            "type": "string",
            "description": "An aggregation of error messages for errors that happened while processing the request, if any."
          },
          "result": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Response.DocumentDeletionResult"
            },
            "description": "A list of status results per document."
          }
        },
        "description": "A response containing the status for a request to delete documents from the index."
      },
      "Response.DocumentDeletionResult": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string",
            "description": "The _itemid for the item item that has been deleted from the index."
          },
          "deleted": {
            "type": "boolean",
            "description": "A boolean flag that specifies whether or not the document has been successfully deleted."
          },
          "errorMessage": {
            "type": "string",
            "description": "An error message for the request, if any."
          }
        },
        "description": "A response representing the result of a request to delete a document from your index's catalog"
      },
      "IndexStatusResponse": {
        "type": "object",
        "properties": {
          "indexStatuses": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Response.IndexStatus"
            },
            "description": "A list of objects containing the status of the index within a region."
          }
        },
        "description": "A response that represents the status of an index within its supported regions."
      },
      "Response.IndexStatus": {
        "type": "object",
        "properties": {
          "region": {
            "$ref": "#/components/schemas/Region"
          },
          "provisioningState": {
            "enum": [
              "Unknown",
              "NotStarted",
              "Provisioning",
              "Deprovisioning",
              "Succeeded",
              "Failed"
            ],
            "type": "string",
            "description": "The provisioning state for the index within the specified region."
          },
          "provisioningPercentage": {
            "type": "number",
            "description": "The percentage of provisioning for the index withing the region.",
            "format": "double"
          }
        },
        "description": "A response that represents a query to an index status within a region."
      },
      "PushDataUpdateResponse": {
        "type": "object",
        "properties": {
          "updateId": {
            "type": "string",
            "description": "The id of the push data update that you can use to track it down."
          }
        },
        "description": "A response to a push data update."
      },
      "PushUpdateStatusResponse": {
        "type": "object",
        "properties": {
          "updateId": {
            "type": "string",
            "description": "The id that uniquely identifies the push data update."
          },
          "status": {
            "enum": [
              "InProgress",
              "Succeeded",
              "PartiallySucceeded",
              "Failed"
            ],
            "type": "string",
            "description": "The wholistic update status for the push data update."
          },
          "totalKeys": {
            "type": "integer",
            "description": "The total number of items that are part of the upate.",
            "format": "int32"
          },
          "successfulKeys": {
            "type": "integer",
            "description": "The total number of items that have successfully been updated.",
            "format": "int32"
          },
          "failureMessages": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An aggregation of any error messages that happened while ingesting any of the records."
          },
          "records": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Response.RecordStatus"
            },
            "description": "A drill down for the push update status for each record."
          }
        },
        "description": "A response that represents the status of a push data update given an update id."
      },
      "Response.RecordStatus": {
        "type": "object",
        "properties": {
          "recordId": {
            "type": "string",
            "description": "The _itemid for the record being updated."
          },
          "status": {
            "enum": [
              "InProgress",
              "Succeeded",
              "PartiallySucceeded",
              "Failed"
            ],
            "type": "string",
            "description": "The status for the push data update regarding the specified item id"
          },
          "errorMessage": {
            "type": "string",
            "description": "An optional error message in case of an error while ingesting the record."
          }
        },
        "description": "A response that represents a status to a push data update for a record."
      },
      "TransformationConfigResponse": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The contents of the transformation config that's being managed."
          },
          "tryOutId": {
            "type": "string",
            "description": "An id that you can use to tryout your transformation on the cloud."
          }
        }
      },
      "TransformationTryoutResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of the transformation config tryout."
          },
          "errorMessage": {
            "type": "string",
            "description": "Any error messages that happened while transforming, if any."
          },
          "results": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of records that the transformation config outputed."
          },
          "consoleOutput": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The console output of the transformation config, if any. Can be useful for debugging."
          }
        },
        "description": "A response representing the status of a transformation config tryout requset."
      },
      "SchemaDetectionResponse": {
        "type": "object",
        "properties": {
          "index": {
            "$ref": "#/components/schemas/Response.Index"
          },
          "transformationConfig": {
            "$ref": "#/components/schemas/TransformationConfigResponse"
          },
          "warnings": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "AppId": {
        "type": "apiKey",
        "name": "appid",
        "in": "query"
      },
      "PortalBearerToken": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "AppId": [ ]
    },
    {
      "PortalBearerToken": [ ]
    }
  ],
  "tags": [
    {
      "name": "CommerceSearchIngestionService"
    }
  ]
}