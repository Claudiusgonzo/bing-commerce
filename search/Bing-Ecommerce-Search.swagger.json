{
  "swagger": "2.0",
  "info": {
    "title": "Bing ECommerce Search",
    "version": "1"
  },
  "host": "www.bingapis.com",
  "basePath": "/api/v1/retail/search",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{tenant}/indexes/{index}": {
      "post": {
        "tags": [
          "RetailSearchService"
        ],
        "operationId": "Search_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ECommerceSearchPostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ECommerceSearchResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "RetailSearchService"
        ],
        "operationId": "Search_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mkt",
            "type": "string"
          },
          {
            "in": "query",
            "name": "setlang",
            "type": "string"
          },
          {
            "in": "query",
            "name": "q",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "select",
            "type": "string"
          },
          {
            "in": "query",
            "name": "orderby",
            "type": "string"
          },
          {
            "in": "query",
            "name": "top",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "skip",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "discoverfacets",
            "type": "boolean",
            "default": false
          },
          {
            "in": "query",
            "name": "alteration",
            "type": "boolean",
            "default": true
          },
          {
            "in": "query",
            "name": "debug",
            "type": "boolean",
            "default": false
          },
          {
            "in": "query",
            "name": "searchinstanceid",
            "type": "string",
            "default": "Default"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ECommerceSearchResponse"
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "tenant",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "index",
          "required": true,
          "type": "string"
        }
      ]
    }
  },
  "definitions": {
    "ECommerceSearchPostRequest": {
      "type": "object",
      "properties": {
        "market": {
          "type": "string"
        },
        "client": {
          "$ref": "#/definitions/Request.Client"
        },
        "language": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/Request.Query"
        },
        "items": {
          "$ref": "#/definitions/Request.Items"
        },
        "aggregations": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request.AggregationBase"
          }
        },
        "debug": {
          "default": false,
          "type": "boolean"
        },
        "searchInstanceId": {
          "default": "Default",
          "type": "string"
        }
      }
    },
    "Request.Client": {
      "type": "object",
      "properties": {
        "ids": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request.ClientId"
          }
        }
      }
    },
    "Request.ClientId": {
      "type": "object",
      "properties": {
        "kind": {
          "default": "MUID",
          "enum": [
            "MUID",
            "UID"
          ],
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Request.Query": {
      "type": "object",
      "properties": {
        "matchAll": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/Request.QueryClauseBase"
        },
        "filter": {
          "$ref": "#/definitions/ConditionBase"
        },
        "boosts": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request.BoostExpression"
          }
        },
        "alteration": {
          "default": true,
          "type": "boolean"
        },
        "synonyms": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Synonym"
          }
        },
        "excludeBusinessRules": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Request.QueryClauseBase": {
      "required": [
        "_type"
      ],
      "type": "object",
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "Request.Match": {
      "required": [
        "_type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Request.QueryClauseBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type",
      "x-ms-discriminator-value": "Match"
    },
    "Request.Bing.MatchStreams": {
      "allOf": [
        {
          "$ref": "#/definitions/Request.Match"
        },
        {
          "type": "object",
          "properties": {
            "include": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "exclude": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "MatchStreams"
    },
    "Request.QueryClauseBlock": {
      "allOf": [
        {
          "$ref": "#/definitions/Request.QueryClauseBase"
        },
        {
          "type": "object",
          "properties": {
            "values": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Request.QueryClauseBase"
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "QueryClauseBlock"
    },
    "Request.LocationMatch": {
      "allOf": [
        {
          "$ref": "#/definitions/Request.QueryClauseBase"
        },
        {
          "type": "object",
          "properties": {
            "center": {
              "$ref": "#/definitions/GeoPoint"
            },
            "radius": {
              "format": "float",
              "type": "number"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "LocationMatch"
    },
    "GeoPoint": {
      "type": "object",
      "properties": {
        "lat": {
          "format": "float",
          "type": "number"
        },
        "lon": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "ConditionBase": {
      "required": [
        "_type"
      ],
      "type": "object",
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "ConditionBlock": {
      "allOf": [
        {
          "$ref": "#/definitions/ConditionBase"
        },
        {
          "type": "object",
          "properties": {
            "conditions": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConditionBase"
              }
            },
            "operator": {
              "$ref": "#/definitions/LogicalOperator"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "ConditionBlock"
    },
    "FieldConditionBase": {
      "required": [
        "_type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ConditionBase"
        },
        {
          "type": "object",
          "properties": {
            "field": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "EquivalenceConditionBase": {
      "required": [
        "_type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FieldConditionBase"
        },
        {
          "type": "object",
          "properties": {
            "operator": {
              "$ref": "#/definitions/EquivalenceOperator"
            }
          }
        }
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "StringCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/EquivalenceConditionBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "StringCondition"
    },
    "BoolCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/EquivalenceConditionBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "boolean"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "BoolCondition"
    },
    "NumericCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/FieldConditionBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "format": "double",
              "type": "number"
            },
            "operator": {
              "$ref": "#/definitions/ComparisonOperator"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "NumericCondition"
    },
    "CategoryCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/FieldConditionBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "string"
            },
            "operator": {
              "$ref": "#/definitions/CategoryOperator"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "CategoryCondition"
    },
    "SetConditionBase": {
      "required": [
        "_type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/FieldConditionBase"
        },
        {
          "type": "object",
          "properties": {
            "operator": {
              "$ref": "#/definitions/SetOperator"
            }
          }
        }
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "StringSetCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/SetConditionBase"
        },
        {
          "type": "object",
          "properties": {
            "values": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "StringSetCondition"
    },
    "GeoCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/ConditionBase"
        },
        {
          "type": "object",
          "properties": {
            "boundary": {
              "$ref": "#/definitions/GeoBoundaryBase"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "GeoCondition"
    },
    "GeoBoundaryBase": {
      "required": [
        "_type"
      ],
      "type": "object",
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "GeoBoundingBox": {
      "allOf": [
        {
          "$ref": "#/definitions/GeoBoundaryBase"
        },
        {
          "type": "object",
          "properties": {
            "topLeft": {
              "$ref": "#/definitions/GeoPoint"
            },
            "bottomRight": {
              "$ref": "#/definitions/GeoPoint"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "GeoBoundingBox"
    },
    "GeoDistance": {
      "allOf": [
        {
          "$ref": "#/definitions/GeoBoundaryBase"
        },
        {
          "type": "object",
          "properties": {
            "center": {
              "$ref": "#/definitions/GeoPoint"
            },
            "radius": {
              "format": "float",
              "type": "number"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "GeoDistance"
    },
    "Request.BoostExpression": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/ConditionBase"
        },
        "boost": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Synonym": {
      "type": "object",
      "properties": {
        "synonymId": {
          "type": "string"
        },
        "synonyms": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Request.Items": {
      "type": "object",
      "properties": {
        "select": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "orderBy": {
          "type": "string"
        },
        "top": {
          "format": "int32",
          "type": "integer"
        },
        "skip": {
          "format": "int32",
          "type": "integer"
        },
        "dedupe": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "Request.AggregationBase": {
      "required": [
        "_type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "aggregations": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Request.AggregationBase"
          }
        },
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "Request.Filter": {
      "allOf": [
        {
          "$ref": "#/definitions/Request.AggregationBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "$ref": "#/definitions/ConditionBase"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Filter"
    },
    "Request.FieldAggregationBase": {
      "required": [
        "_type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Request.AggregationBase"
        },
        {
          "type": "object",
          "properties": {
            "field": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "Request.FacetBase": {
      "required": [
        "_type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Request.FieldAggregationBase"
        },
        {
          "type": "object",
          "properties": {
            "orderBy": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "Request.Facet": {
      "allOf": [
        {
          "$ref": "#/definitions/Request.FacetBase"
        },
        {
          "type": "object"
        }
      ],
      "x-ms-discriminator-value": "Facet"
    },
    "Request.RangeFacet": {
      "allOf": [
        {
          "$ref": "#/definitions/Request.FacetBase"
        },
        {
          "type": "object",
          "properties": {
            "interval": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "RangeFacet"
    },
    "Request.Min": {
      "allOf": [
        {
          "$ref": "#/definitions/Request.FieldAggregationBase"
        },
        {
          "type": "object"
        }
      ],
      "x-ms-discriminator-value": "Min"
    },
    "Request.Max": {
      "allOf": [
        {
          "$ref": "#/definitions/Request.FieldAggregationBase"
        },
        {
          "type": "object"
        }
      ],
      "x-ms-discriminator-value": "Max"
    },
    "Request.DiscoverFacets": {
      "allOf": [
        {
          "$ref": "#/definitions/Request.AggregationBase"
        },
        {
          "type": "object",
          "properties": {
            "discoverFilter": {
              "default": false,
              "type": "boolean"
            },
            "refinements": {
              "default": true,
              "type": "boolean"
            },
            "pin": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Request.FacetBase"
              }
            },
            "include": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Request.FacetBase"
              }
            },
            "exclude": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "facetDefaults": {
              "$ref": "#/definitions/Request.Facet"
            },
            "rangeFacetDefaults": {
              "$ref": "#/definitions/Request.RangeFacet"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "DiscoverFacets"
    },
    "ECommerceSearchResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.Task"
        },
        {
          "type": "object",
          "properties": {
            "impressionId": {
              "type": "string"
            },
            "queryContext": {
              "$ref": "#/definitions/Response.QueryContext"
            },
            "items": {
              "$ref": "#/definitions/Response.ItemsBase"
            },
            "aggregations": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Response.Aggregation"
              }
            },
            "redirectUrl": {
              "type": "string"
            },
            "customization": {
              "$ref": "#/definitions/Response.Customization"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "SearchResponse"
    },
    "Response.QueryContext": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.Task"
        },
        {
          "type": "object",
          "properties": {
            "originalQuery": {
              "type": "string"
            },
            "alteredQuery": {
              "type": "string"
            }
          }
        }
      ]
    },
    "Response.Task": {
      "required": [
        "_type"
      ],
      "type": "object",
      "properties": {
        "errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.Error"
          }
        },
        "debug": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.DebugInfo"
          }
        },
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "Response.Error": {
      "type": "object",
      "properties": {
        "code": {
          "default": "None",
          "enum": [
            "None",
            "ServerError",
            "InvalidRequest",
            "InsufficientAuthorization"
          ],
          "type": "string"
        },
        "subCode": {
          "enum": [
            "UnexpectedError",
            "ResourceError",
            "DeadlineExceeded",
            "ParameterMissing",
            "ParameterInvalidValue"
          ],
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "moreDetails": {
          "type": "string"
        }
      }
    },
    "Response.DebugInfo": {
      "required": [
        "_type"
      ],
      "type": "object",
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "Response.Bing.BingItemDebugInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.DebugInfo"
        },
        {
          "type": "object",
          "properties": {
            "perfectMatchingStreams": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Response.Bing.MatchingStream"
              }
            },
            "completeMatchingStreams": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Response.Bing.MatchingStream"
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "BingItemDebugInfo"
    },
    "Response.Bing.MatchingStream": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "score": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SetOperator": {
      "enum": [
        "In",
        "NotIn"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "SetOperator",
        "values": [
          {
            "value": "In"
          },
          {
            "value": "NotIn"
          }
        ]
      }
    },
    "Response.Customization": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.Task"
        },
        {
          "type": "object",
          "properties": {
            "queryAlteration": {
              "type": "boolean"
            },
            "synonyms": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Synonym"
              }
            },
            "rules": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "filter": {
              "$ref": "#/definitions/ConditionBase"
            },
            "boosts": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Response.BoostExpression"
              }
            }
          }
        }
      ]
    },
    "Response.BoostExpression": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/ConditionBase"
        },
        "boost": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "Response.ItemsBase": {
      "required": [
        "_type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Response.Task"
        },
        {
          "type": "object",
          "properties": {
            "totalEstimatedMatches": {
              "format": "int64",
              "type": "integer"
            }
          }
        }
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "Response.Items": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.ItemsBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Response.Item"
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Items"
    },
    "Response.Item": {
      "type": "object",
      "properties": {
        "indexId": {
          "type": "string"
        },
        "itemId": {
          "type": "string"
        },
        "score": {
          "format": "double",
          "type": "number"
        },
        "fields": {
          "type": "object"
        },
        "debug": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.DebugInfo"
          }
        }
      }
    },
    "ComparisonOperator": {
      "enum": [
        "Eq",
        "Ne",
        "Gt",
        "Lt",
        "Ge",
        "Le"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ComparisonOperator",
        "values": [
          {
            "value": "Eq"
          },
          {
            "value": "Ne"
          },
          {
            "value": "Gt"
          },
          {
            "value": "Lt"
          },
          {
            "value": "Ge"
          },
          {
            "value": "Le"
          }
        ]
      }
    },
    "CategoryOperator": {
      "enum": [
        "In",
        "NotIn"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "CategoryOperator",
        "values": [
          {
            "value": "In"
          },
          {
            "value": "NotIn"
          }
        ]
      }
    },
    "EquivalenceOperator": {
      "enum": [
        "Eq",
        "Ne"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "EquivalenceOperator",
        "values": [
          {
            "value": "Eq"
          },
          {
            "value": "Ne"
          }
        ]
      }
    },
    "LogicalOperator": {
      "enum": [
        "And",
        "Or"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "LogicalOperator",
        "values": [
          {
            "value": "And"
          },
          {
            "value": "Or"
          }
        ]
      }
    },
    "Response.Aggregation": {
      "required": [
        "_type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Response.Task"
        },
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "estimatedCount": {
              "format": "int64",
              "type": "integer"
            },
            "aggregations": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Response.Aggregation"
              }
            }
          }
        }
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type",
      "x-ms-discriminator-value": "Aggregation"
    },
    "Response.Filter": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.Aggregation"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "x-ms-discriminator-value": "Filter"
    },
    "Response.DiscoveredFacets": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.Aggregation"
        },
        {
          "type": "object",
          "properties": {
            "filter": {
              "$ref": "#/definitions/ConditionBase"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "DiscoveredFacets"
    },
    "Response.RefinementBase": {
      "required": [
        "_type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Response.Aggregation"
        },
        {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "Response.RangeRefinement": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.RefinementBase"
        },
        {
          "type": "object",
          "properties": {
            "ge": {
              "format": "double",
              "type": "number"
            },
            "lt": {
              "format": "double",
              "type": "number"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "RangeRefinement"
    },
    "Response.NumberRefinement": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.RefinementBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "format": "double",
              "type": "number"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "NumberRefinement"
    },
    "Response.StringRefinement": {
      "required": [
        "_type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Response.RefinementBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type",
      "x-ms-discriminator-value": "StringRefinement"
    },
    "Response.CategoryRefinement": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.StringRefinement"
        },
        {
          "type": "object",
          "properties": {
            "refinements": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/Response.CategoryRefinement"
              }
            }
          }
        }
      ],
      "x-ms-discriminator-value": "CategoryRefinement"
    },
    "Response.BoolRefinement": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.RefinementBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "type": "boolean"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "BoolRefinement"
    },
    "Response.FieldAggregationBase": {
      "required": [
        "_type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Response.Aggregation"
        },
        {
          "type": "object",
          "properties": {
            "field": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "Response.FacetBase": {
      "required": [
        "_type"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Response.FieldAggregationBase"
        },
        {
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            }
          }
        }
      ],
      "properties": {
        "_type": {
          "type": "string"
        }
      },
      "discriminator": "_type"
    },
    "Response.NumberFacet": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.FacetBase"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "refinements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.NumberRefinement"
          }
        }
      },
      "x-ms-discriminator-value": "NumberFacet"
    },
    "Response.StringFacet": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.FacetBase"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "refinements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.StringRefinement"
          }
        }
      },
      "x-ms-discriminator-value": "StringFacet"
    },
    "Response.CategoryFacet": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.FacetBase"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "refinements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.CategoryRefinement"
          }
        }
      },
      "x-ms-discriminator-value": "CategoryFacet"
    },
    "Response.BoolFacet": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.FacetBase"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "refinements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.BoolRefinement"
          }
        }
      },
      "x-ms-discriminator-value": "BoolFacet"
    },
    "Response.RangeFacet": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.FacetBase"
        },
        {
          "type": "object"
        }
      ],
      "properties": {
        "refinements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response.RangeRefinement"
          }
        }
      },
      "x-ms-discriminator-value": "RangeFacet"
    },
    "Response.Min": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.FieldAggregationBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "format": "double",
              "type": "number"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Min"
    },
    "Response.Max": {
      "allOf": [
        {
          "$ref": "#/definitions/Response.FieldAggregationBase"
        },
        {
          "type": "object",
          "properties": {
            "value": {
              "format": "double",
              "type": "number"
            }
          }
        }
      ],
      "x-ms-discriminator-value": "Max"
    }
  },
  "securityDefinitions": {
    "AppId": {
      "type": "apiKey",
      "name": "appid",
      "in": "query"
    },
    "PortalBearerToken": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "AppId": [ ]
    },
    {
      "PortalBearerToken": [ ]
    }
  ],
  "tags": [
    {
      "name": "RetailSearchService"
    }
  ]
}